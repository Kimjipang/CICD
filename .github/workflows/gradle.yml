# This is a basic workflow to help you get started with Actions
name: Build and Deploy Spring Boot to AWS EC2

# master 브랜치에 푸쉬 했을때
on:
  push:
    branches: [ master ]

# 해당 코드에서 사용될 변수 설정
env:
  PROJECT_NAME: DeargenProject
  BUCKET_NAME: deargen
  CODE_DEPLOY_APP_NAME: codeDeploy-deargen
  DEPLOYMENT_GROUP_NAME: codeDeploy-deargen

jobs:
  build:
    runs-on: ubuntu-20.04
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v2 # checkout 과정 수행

      - name: Setup Java JDK 11
        uses: actions/setup-java@v1 # Java JDK 셋업하는 과정 수행
        with:
          java-version: 11

        #gradlew 파일 실행권한 설정
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

        #빌드 시작
      - name: Build with Gradle
        run: ./gradlew build

        #프로젝트 zip파일로 압축
      - name: Make Zip File
        run: zip -qq -r ./$PROJECT_NAME.zip .

        #aws 접근 id, key
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

        # s3에 압축한 zip파일 업로드
      - name: Upload to S3
        run: aws s3 cp --region ap-northeast-2 ./$PROJECT_NAME.zip s3://$BUCKET_NAME

        # s3에 업로드한 파일 code Deploy에서 배포 요청
      - name: Code Deploy
        run: aws deploy create-deployment --application-name $CODE_DEPLOY_APP_NAME --deployment-config-name CodeDeployDefault.OneAtATime --deployment-group-name $DEPLOYMENT_GROUP_NAME --s3-location bucket=$BUCKET_NAME,bundleType=zip,key=$PROJECT_NAME.zip
